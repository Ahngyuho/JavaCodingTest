import java.util.*;
class Main {
	int answer=0, target, m;
	ArrayList<Integer> nums=new ArrayList<>();
	Stack<Integer> pm = new Stack<>();
	int[] ch;
	boolean flag=false;
	public void DFS(int L){
		if(flag) return;
		if(L==m){
			answer=0;
			for(int x : pm) answer=answer*10+x;
			if(answer>target) flag=true;
		}
		else{
			for(int i=0; i<m; i++){
				if(ch[i]==0){
					ch[i]=1;
					pm.push(nums.get(i));
					DFS(L+1);
					ch[i]=0;
					pm.pop();
				}
			}
		}
	}
	public int solution(int n){
		target=n;
		int tmp=n;
		while(tmp>0){
			int t=tmp%10;
			nums.add(t);
			tmp=tmp/10;
		}
		Collections.sort(nums);
		m=nums.size();
		ch=new int[m];
		DFS(0);
		if(flag==false) return -1;
		return answer;
	}
		
	public static void main(String[] args){
		Main T = new Main();
		System.out.println(T.solution(123));
	}
}